#!/usr/bin/perl -w
use scripts::Lib::Common;
use strict;

my $file = "";
if( defined($ENV{'CurriculaParam'}))	{ $Common::command = $ENV{'CurriculaParam'};	}
if(defined($ARGV[0])) { $Common::command = shift or Util::halt("There is no command to process (i.e. AREA-INST)");	}
if(defined($ARGV[0])) { $file = shift or Util::halt("There is no file to process ...");	}

sub update_page_numbers($)
{
	my ($file)     = (@_);
        Util::precondition("read_pagerefs");
	Util::print_message("Reading $file ...");

	my $file_txt  = Util::read_file($file);
	#$file_txt =~ s/--PAGEFG102--/$Common::config{pages_map}{"sec:FG102"}/g;
	while( $file_txt =~ m/--PAGE(.*?)--/)
	{
		my $course = $1;
		#Util::print_message("Replacing $course ...");
		if( defined($Common::config{pages_map}{"sec:$course"}) )
		{	$file_txt =~ s/--PAGE$course--/$Common::config{pages_map}{"sec:$course"}/g;	}
		else
		{	$file_txt =~ s/--PAGE$course--/  /g;	}
 	}
	#$file_txt =~ s/--PAGE(.*?)--/$Common::config{pages_map}{"sec:$1"}/g;
	foreach my $outcome (keys %{$Common::config{outcomes_map}})
	{
		$file_txt =~ s/\\outcome{$outcome}/$Common::config{outcomes_map}{$outcome}/g;
	}
	Util::write_file($file, $file_txt);
}

sub main()
{
	Common::set_initial_configuration($Common::command);
        Common::read_pagerefs();
	update_page_numbers($file);
}

main();